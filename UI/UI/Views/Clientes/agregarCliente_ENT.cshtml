@model UI.Models.Clientes

@{
    ViewBag.Title = "agregarCliente_ENT";
}

<h2>agregarCliente_ENT</h2>

@using (Html.BeginForm("accionesEjecucion", "Clientes", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Clientes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TC_Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_Ap1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_Ap1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_Ap1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_Ap2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_Ap2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_Ap2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_NumTelefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_NumTelefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_NumTelefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_CorreoElectronico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-2">
                <button type="submit" name="accionEjecutar" value="Agregar" class="btn btn-success" formaction="@Url.Action("accionesEjecucion", "Clientes")">
                    Agregar
                </button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "obtenerClientes_ENT")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}